## 5-1장 프로세스와 스케쥴러

<br>

### 1. 프로세스란
1. 실행중인 프로그램이다 -> 너무 막연한 설명한다.
2. 메인 메모리로 이동하여 실행중인 프로그램이다!
>아 그렇다면 프로세스는 단순히 현재 창에만 띄어진 프로그램만을 얘기하는것이 아니구나!를 유추할수 있다.

<br>

### 프로세스의 범위
+ 프로그램의 '메모리 차지'와 레지스터 set

	메모리 차지
	1. code영역 - 명령어
	2. data영역 - 전역변수, static변수
	3. heap영역 - 프로그래머 할당
	4. stack영역 - 지연변수, 전달인자 정보
<br>
+ A프로세스가 실행중(= cpu를 통한 연산중)이라면 cpu 레지스터에는 A의 정보들로 차게된다.
<br>
+ 프로세스 별 독립적인 대상은 프로세스의 범주에 포함시킬수 있다.

### 컨텍스트 스위칭
A가 실행중에 있다 Ready 상태가 되고 프로세스 B가 실행중이라 고해보자,<br>
A가 실행중일 당시에 레지스터 정보는 머나먼 안드로메다로, 또는 새벽의 이슬처럼 그냥 증발하는가?<br>
아니다, 운영체제는 당시에 레지스터 정보를 메모리에 저장시켜 두었다가, A가 다시 실행되면<br>
로드하는 식으로 작동 되며 이를 컨텍스트 스위칭이라고 한다.<br>
컴퓨터는 이과정을 몇초에 한번, 또 몇초에 한번하는것이 아니다.<br>
1초에 수없이 많이 진행될수도 있다. 이는 컴퓨터 입장에서 꽤나큰 부담으로 작용된다.<br>

cf)이러한 부담을 해소키 위해 프로세스 개개의 레지스터set을 갖는 방법도 있다.

<br>

### 프로세스 스케줄러
두개이상의 프로세스가 메모리에 올라왔다. A프로세스, B프로세스<br>
멀티프로세서 운영체제 에서는 두개다 처리할 능력을 갖고있다.<br>
바로 프로세스를 번갈아 처리해 가면서 말이다.<br>
<br>
그렇다면.. 번갈아 가는 그 순서.. 순서는 어떻게 결정하는가?
<br>
운영체제의 장치(모듈)중 하나인 '스케줄러'에 의해 결정된다.<br>
스케줄러는 스케줄링 알고리즘을 통해서 프로세스의 실행 우선순위를 판별하며, 이러한 과저을 스케줄링이라 한다.<br>

> 이러한 스케쥴러도 하나의 프로그램이며, 여러개의 프로세스들이 처리되는 과정에서 참여되는 하나의 프로세스다.

<br>

### 프로세스의 상태
1. start - 프로그램의 시작
2. Ready - 프로그램의 프로세스화 되서 메모리 올라가져있고, running상태로 갈수있는(다시말해 cpu로 처리될수 있는) 준비가 되어 대기하고 있는 상태
3. Running - cpu에 의해 실행중인 상태 
4. Blocked - 입출력을 받고있는 상태로, running상태는 아니지만 스케쥴러의 선택이 불가능한 상태
I/O(입출력 - 단순한 입출력 외, 데이터 전송, 네트워크도 포함)처리는 대부분 cpu에 독립적이다.

